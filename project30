
import networkx as nx
import matplotlib.pyplot as plt
DG=nx.Graph()
DG.add_nodes_from(['GB', 'FPU','MPU', 'TPU', 'OIL', 'STOCK'])
DG.add_weighted_edges_from([('GB','FPU', 3.35), ('GB','MPU',3.06), ('GB','TPU', 5), ('GB','OIL', 1.27), ('GB','STOCK',0.18),
('MPU','FPU',0.64),('OIL','FPU',2.18),('TPU', 'FPU',-0.09), ('FPU','STOCK',0.68), ('MPU','TPU',0.54), ('OIL','MPU',3.85),
('MPU','STOCK',0.12), ('OIL','TPU',2.8),('STOCK','TPU',4.06), ('STOCK','OIL',0.64)])
pos=nx.spring_layout(DG)
nx.draw_networkx(DG,pos, labels={n: n for n in DG.nodes()})
l={('GB','FPU'): 3.35, ('GB','MPU'):3.06, ('GB','TPU'):5, ('GB','OIL'):1.27, ('GB','STOCK'):0.18,
('MPU','FPU'):0.64,('OIL','FPU'):2.18,('TPU', 'FPU'):-0.09, ('FPU','STOCK'):0.68, ('MPU','TPU'):0.54,
('OIL','MPU'):3.85, ('MPU','STOCK'):0.12, ('OIL','TPU'):2.8,('STOCK','TPU'):4.06, ('STOCK','OIL'):0.64}
nx.draw_networkx_edge_labels(DG, pos, edge_labels=l)
nx.draw_networkx(DG, pos, with_labels=True, node_size=1500, node_color='blue', edge_color='lightblue')
plt.show()
from networkx.algorithms import tree
list1=list(tree.minimum_spanning_tree(DG, algorithm='kruskal'))
print(list1)
G1=nx.DiGraph()
G1.add_nodes_from(['GB', 'FPU','MPU', 'TPU', 'OIL', 'STOCK'] )
G1.add_weighted_edges_from([('FPU', 'TPU',  -0.09), ('MPU', 'STOCK', 0.12), ('GB', 'STOCK', 0.18),
                            ('MPU', 'TPU', 0.54), ('STOCK', 'OIL', 0.64)])
pos=nx.spring_layout(G1)
nx.draw_networkx(G1,pos, labels={n: n for n in G1.nodes()})
l1={('FPU', 'TPU'): -0.09, ('MPU', 'STOCK'): 0.12, ('GB', 'STOCK'): 0.18,
                            ('MPU', 'TPU'): 0.54, ('STOCK', 'OIL'): 0.64}
nx.draw_networkx_edge_labels(G1, pos, edge_labels=l1)
nx.draw_networkx(G1, pos, with_labels=True, node_size=1300, node_color='red')
plt.show()
d1=G1.out_degree
print(d1)










